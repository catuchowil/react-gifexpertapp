{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","categorias","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","ima","key","GifExpertApp","c","ReactDOM","render","document","getElementById"],"mappings":"6MAsDeA,EAlDK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGFC,mBAAS,IAHP,mBAG9BC,EAH8B,KAGlBC,EAHkB,KAuBrC,OACI,0BAAMC,SAdS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAUd,oDAEA,2BACCO,KAAM,OACNC,MAAST,EACTU,SAxBW,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,Y,uBCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCgBLO,EAfK,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAM7B,OAHAc,QAAQC,IAAIN,EAAIC,EAAOV,GAInB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KC6BDS,EAnCC,SAAC,GAAkB,IAAjBrB,EAAgB,EAAhBA,WAAgB,ECAN,SAACA,GAAgB,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA6BxC,OAtBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAM,SAAAC,GAGCH,EAAS,CAELjB,KAAMoB,EACNL,SAAS,SAU1B,CAACtB,IAGGuB,EDzB0BK,CAAa5B,GAAlC6B,EAJkB,EAIvBtB,KAAee,EAJQ,EAIRA,QAMtB,OAEI,oCACI,wBAAIJ,UAAU,IAAIlB,GAEjBsB,GAAW,uBAAGJ,UAAU,yCAAb,8BAEX,yBAAKA,UAAU,aAIJW,EAASpB,KAAK,SAAAqB,GAAG,OAEb,kBAAC,EAAD,eACAC,IAAKD,EAAInB,IACLmB,UEKjBE,EA/BM,WAAM,MAIa9C,mBAAS,CAAC,gBAJvB,mBAIhBc,EAJgB,KAIJf,EAJI,KASvB,OACI,oCAEI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQe,EAAWS,KAAI,SAAAwB,GAAC,OACX,kBAAC,EAAD,CACAF,IAAOE,EACPjC,WAAciC,UCnBvCC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.061fd965.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategorias}) => {\n    //Zona para programar\n\n    const [inputValue, setInputValue]= useState('');\n\n    \n    const cambioInput = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const cambioForm = (e)=>{\n        e.preventDefault()\n\n        if(inputValue.trim().length > 2){\n            setCategorias(cate => [inputValue, ...cate ]);\n            setInputValue('');\n        }\n\n    }\n\n\n    //fin zona para programar\n\n    return (\n        <form onSubmit = {cambioForm}>\n            <h2>Agregar Categoría</h2>\n\n            <input\n             type =\"text\"\n             value = {inputValue} \n             onChange = {cambioInput} // Con esta forma tengo que hacer la función fuera\n             /*\n             la otra forma es hacer la función en el mismo input\n             onChange = { (e)=> setInputeValue(e.target.value) }\n              */\n             >\n             \n\n             </input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\n\n\n\nexport default AddCategory\n","\nexport const getGifs = async(categorias) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorias)}&limit=10&api_key=8WEe4yym3oymuUKNAoQDfxnAyv2xugnF`;\n    const resp = await fetch( url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}\n","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n    //zona para programar\n\n    console.log(id, title, url);\n\n    //fin zona\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n            \n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n\nconst GifGrid = ({categorias}) => {\n    //zona para programar\n\n//    const [images, setImages] = useState([]);\n    const {data:imagenes, loading} = useFetchGifs(categorias);\n   \n        \n\n   // getGifs();\n    //fin zona\n    return (\n\n        <>\n            <h3 className=\"\">{categorias}</h3>\n\n            {loading && <p className=\"card animate__animated animate__flash\">Cargando imágenes...!!!</p>}\n           \n             <div className=\"card-grid\">\n            \n            \n                    {\n                        imagenes.map( ima =>(\n                        \n                            <GifGridItem \n                            key={ima.id}\n                            {...ima}\n                            />\n                        ))\n                    }\n            \n            </div> \n        </>\n    )\n}\n\nexport default GifGrid\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = (categorias) => {\n   \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n\n        getGifs(categorias)\n            .then( imgs => {\n\n               \n                    setState({\n                    \n                        data: imgs,\n                        loading: false\n                    \n                    });\n\n            \n\n                \n                    \n            })\n\n    }, [categorias])\n\n\n    return state; // {data: [], loading: true}\n}\n\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    //zona para programar\n\n   \n    const [categorias, setCategorias] = useState(['Thundercats']);\n\n   \n    \n    //fin zona para programar\n    return (\n        <>\n\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategorias = {setCategorias}/>\n            <hr/>\n\n            <ol>\n                {\n                    categorias.map(c => (\n                         <GifGrid\n                         key = {c}\n                         categorias = {c}\n                         />\n                    ))\n                }\n            </ol>\n            \n        </>\n    )\n}\n\nexport default GifExpertApp\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}